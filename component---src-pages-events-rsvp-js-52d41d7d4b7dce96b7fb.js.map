{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/pages/events/rsvp.js"],"names":["Header","props","state","responsive","componentDidMount","this","setState","common","checkResponsive","window","onresize","render","className","title","Grid","container","direction","justify","alignItems","item","xs","class","size","showLogo","src","dsclogo","children","React","Component","Loading","require","RSVP","loading","error","success","eventInfo","rsvp","getUrlVars","vars","location","href","replace","m","key","value","id","token","events","getEvent","then","r","getRSVP","catch","err","Box","pt","isLoading","width","height","strokeWidth","name","p","Button","variant","theme"],"mappings":"iQAUqBA,E,oBAEjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACTC,YAAY,GAHD,E,kHAOnBC,kBAAA,WAAqB,IAAD,OAChBC,KAAKC,SAAS,CACVH,WAAYI,IAAOC,oBAEvBC,OAAOC,SAAW,WACd,EAAKJ,SAAS,CACVH,WAAYI,IAAOC,sB,EAK/BG,OAAA,WACI,OACI,yBAAKC,UAAW,QACZ,kBAAC,IAAD,KACI,+BAAQP,KAAKJ,MAAMY,QAEvB,yBAAKD,UAAW,QACZ,kBAACE,EAAA,EAAD,CAAMC,WAAS,EACXC,UAAU,MACVC,QAAQ,aACRC,WAAW,UAEVb,KAAKH,MAAMC,YACR,kBAACW,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACX,yBAAKC,MAAM,aACNhB,KAAKH,MAAMC,YAAc,kBAAC,IAAD,CAAQmB,KAAM,YAIpD,kBAACR,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAIf,KAAKH,MAAMC,WAAa,GAAK,GAEhB,GAAvBE,KAAKJ,MAAMsB,UACR,yBAAKC,IAAKC,IAASb,UAAW,kBAGpCP,KAAKH,MAAMC,YACT,kBAACW,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACX,4BACI,oCACA,sCACA,6CACA,2CAMpB,yBAAKR,UAAW,WACXP,KAAKJ,MAAMyB,Y,GA1DIC,IAAMC,W,wCCL1C,IAAMC,EAAUC,EAAQ,KAEHC,E,oBAEjB,WAAY9B,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACT8B,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,UAAW,GACXC,KAAM,IAPK,E,kHAWnBC,WAAA,WACI,IAAIC,EAAO,GACC7B,OAAO8B,SAASC,KAAKC,QAAQ,2BAA2B,SAAUC,EAAGC,EAAKC,GAClFN,EAAKK,GAAOC,KAEhB,OAAON,G,EAIXlC,kBAAA,WAAqB,IAAD,OACZyC,EAAKxC,KAAKgC,aAAL,GACLS,EAAQzC,KAAKgC,aAAL,MACRQ,GAAMC,EACNC,IAAOC,SAASH,GAAII,MAAK,SAACC,GACtBH,IAAOI,QAAQN,EAAIC,GAAOG,MAAK,SAACb,GAC5B,EAAK9B,SAAS,CACV4B,SAAS,EACTF,SAAS,EACTG,UAAWe,EACXd,eAGTgB,OAAM,SAACC,GACN,EAAK/C,SAAS,CACV,OAAS,OAIjBD,KAAKC,SAAS,CACV,OAAS,K,EAiBrBK,OAAA,WACI,OACI,kBAAC,EAAD,CAAQY,UAAU,GACd,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,UACrB,kBAACqC,EAAA,EAAD,CAAKC,GAAI,IACL,6BACKlD,KAAKH,MAAM8B,UAAY3B,KAAKH,MAAM+B,OAC/B,6BACI,kBAACJ,EAAD,CACI2B,UAAWnD,KAAKH,MAAM8B,QACtByB,MAAO,GACPC,OAAQ,GACRC,YAAa,IAGjB,kBAACL,EAAA,EAAD,CAAKC,GAAI,GACL,0DAKRlD,KAAKH,MAAM+B,OACX,6BACI,wEACA,6BACA,0FAIJ5B,KAAKH,MAAMgC,UAAY7B,KAAKH,MAAM+B,OAClC,6BACI,4BAAK5B,KAAKH,MAAMiC,UAAUyB,MAC1B,6BACA,4BACwB,WAAnBvD,KAAKH,MAAMkC,MACR,8EAEgB,SAAnB/B,KAAKH,MAAMkC,MACR,0CAEgB,aAAnB/B,KAAKH,MAAMkC,MACR,kDAGR,6BACA,6BACA,kBAACtB,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,UACrB,kBAACqC,EAAA,EAAD,CAAKO,EAAG,GACJ,kBAACC,EAAA,EAAD,CAAQC,QAAS,YAAaC,MAAO,OAAQnB,GAAI,gBAAjD,oBAIJ,kBAACS,EAAA,EAAD,CAAKO,EAAG,GACJ,kBAACC,EAAA,EAAD,CAAQC,QAAS,YAAaC,MAAO,MAAOnB,GAAI,oBAAhD,+B,GAhHVlB,IAAMC","file":"component---src-pages-events-rsvp-js-52d41d7d4b7dce96b7fb.js","sourcesContent":["import React from 'react';\nimport Helmet from \"react-helmet\";\nimport dsclogo from \"../images/dsclogo.svg\";\nimport logo_horizontal from \"../images/logo.svg\";\n// import logo_horizontal from \"../images/logo_horizontal.png\";\nimport { FaBars } from \"react-icons/fa\";\nimport common from \"./common.js\";\nimport \"../styles/menu.scss\";\nimport { Grid } from '@material-ui/core';\n\nexport default class Header extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            responsive: false\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            responsive: common.checkResponsive()\n        });\n        window.onresize = () => {\n            this.setState({\n                responsive: common.checkResponsive()\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"page\"}>\n                <Helmet>\n                    <title>{this.props.title}</title>\n                </Helmet>\n                <div className={\"menu\"}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        {this.state.responsive &&\n                            <Grid item xs={2}>\n                                <div class=\"hamburger\">\n                                    {this.state.responsive && <FaBars size={\"1.4em\"} />}\n                                </div>\n                            </Grid>\n                        }\n                        <Grid item xs={this.state.responsive ? 10 : 8}>\n                            {/* <img src={dsclogo} className={\"dsclogo\"}></img> */}\n                            {this.props.showLogo == true &&\n                                <img src={dsclogo} className={\"logo_symbol\"}></img>\n                            }\n                        </Grid>\n                        {!this.state.responsive &&\n                            <Grid item xs={4}>\n                                <ul>\n                                    <li>Home</li>\n                                    <li>Events</li>\n                                    <li>Meet the team</li>\n                                    <li>Contact</li>\n                                </ul>\n                            </Grid>\n                        }\n                    </Grid>\n                </div>\n                <div className={\"content\"}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport { Box, Grid } from \"@material-ui/core\";\nimport events from \"../../controllers/events\";\nimport Button from \"../../components/Button\";\nimport Header from \"../../components/Header\";\nconst Loading = require('react-loading-animation');\n\nexport default class RSVP extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            error: false,\n            success: false,\n            eventInfo: {},\n            rsvp: ''\n        }\n    }\n\n    getUrlVars() {\n        var vars = {};\n        var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n            vars[key] = value;\n        });\n        return vars;\n    }\n\n\n    componentDidMount() {\n        let id = this.getUrlVars()[\"id\"];\n        let token = this.getUrlVars()[\"token\"];\n        if (id && token) {\n            events.getEvent(id).then((r) => {\n                events.getRSVP(id, token).then((rsvp) => {\n                    this.setState({\n                        success: true,\n                        loading: false,\n                        eventInfo: r,\n                        rsvp\n                    });\n                })\n            }).catch((err) => {\n                this.setState({\n                    'error': true\n                })\n            });\n        } else {\n            this.setState({\n                'error': true\n            });\n        }\n\n        // let going_button = document.getElementById('going_button');\n        // let not_going_button = document.getElementById('not_going_button');\n\n        // going_button.onclick = function()  {\n\n        // }\n\n        // not_going_button.onclick = function() {\n\n        // }\n\n    }\n\n    render() {\n        return (\n            <Header showLogo={true}>\n                <Grid container justify={\"center\"}>\n                    <Box pt={25}>\n                        <div>\n                            {this.state.loading && !this.state.error &&\n                                <div>\n                                    <Loading\n                                        isLoading={this.state.loading}\n                                        width={80}\n                                        height={80}\n                                        strokeWidth={4}\n                                    >\n                                    </Loading>\n                                    <Box pt={5}>\n                                        <h1>Loading event details...</h1>\n                                    </Box>\n                                </div>\n                            }\n                            {\n                                this.state.error &&\n                                <div>\n                                    <h1>Couldn't fetch the details of that event</h1>\n                                    <br />\n                                    <p>That event may have been deleted, or may be a private one.</p>\n                                </div>\n                            }\n                            {\n                                this.state.success && !this.state.error &&\n                                <div>\n                                    <h1>{this.state.eventInfo.name}</h1>\n                                    <br />\n                                    <h3>\n                                        {this.state.rsvp == \"invited\" &&\n                                            \"You are currently invited for this event, will you be going for this event?\"\n                                        }\n                                        {this.state.rsvp == \"going\" &&\n                                            \"All good! You are going for this event.\"\n                                        }\n                                        {this.state.rsvp == \"not_going\" &&\n                                            \"You've responded with Not Going for this event\"\n                                        }\n                                    </h3>\n                                    <br />\n                                    <br />\n                                    <Grid container justify={\"center\"}>\n                                        <Box p={2}>\n                                            <Button variant={\"contained\"} theme={\"blue\"} id={\"going_button\"}>\n                                                Yes, I'm going!\n                                            </Button>\n                                        </Box>\n                                        <Box p={2}>\n                                            <Button variant={\"contained\"} theme={\"red\"} id={\"not_going_button\"}>\n                                                Nope, I can't go :(\n                                            </Button>\n                                        </Box>\n                                    </Grid>\n                                </div>\n                            }\n                        </div>\n                    </Box>\n                </Grid>\n            </Header>\n        )\n    }\n}"],"sourceRoot":""}