{"version":3,"sources":["webpack:///./src/pages/events/rsvp.js"],"names":["Loading","require","RSVP","props","state","loading","error","success","eventInfo","rsvp","getUrlVars","vars","window","location","href","replace","m","key","value","componentDidMount","id","this","token","events","getEvent","then","r","getRSVP","setState","catch","err","render","showLogo","container","justify","pt","isLoading","width","height","strokeWidth","name","p","variant","theme","React","Component"],"mappings":"8NAKA,IAAMA,EAAUC,EAAQ,KAEHC,E,oBAEjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACTC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,UAAW,GACXC,KAAM,IAPK,E,kHAWnBC,WAAA,WACI,IAAIC,EAAO,GACCC,OAAOC,SAASC,KAAKC,QAAQ,2BAA2B,SAAUC,EAAGC,EAAKC,GAClFP,EAAKM,GAAOC,KAEhB,OAAOP,G,EAIXQ,kBAAA,WAAqB,IAAD,OACZC,EAAKC,KAAKX,aAAL,GACLY,EAAQD,KAAKX,aAAL,MACRU,GAAME,EACNC,IAAOC,SAASJ,GAAIK,MAAK,SAACC,GACtBH,IAAOI,QAAQP,EAAIE,GAAOG,MAAK,SAAChB,GAC5B,EAAKmB,SAAS,CACVrB,SAAS,EACTF,SAAS,EACTG,UAAWkB,EACXjB,eAGToB,OAAM,SAACC,GACN,EAAKF,SAAS,CACV,OAAS,OAIjBP,KAAKO,SAAS,CACV,OAAS,K,EAiBrBG,OAAA,WACI,OACI,kBAAC,IAAD,CAAQC,UAAU,GACd,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,UACrB,kBAAC,IAAD,CAAKC,GAAI,IACL,6BACKd,KAAKjB,MAAMC,UAAYgB,KAAKjB,MAAME,OAC/B,6BACI,kBAACN,EAAD,CACIoC,UAAWf,KAAKjB,MAAMC,QACtBgC,MAAO,GACPC,OAAQ,GACRC,YAAa,IAGjB,kBAAC,IAAD,CAAKJ,GAAI,GACL,0DAKRd,KAAKjB,MAAME,OACX,6BACI,wEACA,6BACA,0FAIJe,KAAKjB,MAAMG,UAAYc,KAAKjB,MAAME,OAClC,6BACI,4BAAKe,KAAKjB,MAAMI,UAAUgC,MAC1B,6BACA,4BACwB,WAAnBnB,KAAKjB,MAAMK,MACR,8EAEgB,SAAnBY,KAAKjB,MAAMK,MACR,0CAEgB,aAAnBY,KAAKjB,MAAMK,MACR,kDAGR,6BACA,6BACA,kBAAC,IAAD,CAAMwB,WAAS,EAACC,QAAS,UACrB,kBAAC,IAAD,CAAKO,EAAG,GACJ,kBAAC,IAAD,CAAQC,QAAS,YAAaC,MAAO,OAAQvB,GAAI,gBAAjD,oBAIJ,kBAAC,IAAD,CAAKqB,EAAG,GACJ,kBAAC,IAAD,CAAQC,QAAS,YAAaC,MAAO,MAAOvB,GAAI,oBAAhD,+B,GAhHVwB,IAAMC","file":"component---src-pages-events-rsvp-js-81780fa2fb3fe485bedd.js","sourcesContent":["import React from 'react';\nimport { Box, Grid } from \"@material-ui/core\";\nimport events from \"../../controllers/events\";\nimport Button from \"../../components/Button\";\nimport Header from \"../../components/header\";\nconst Loading = require('react-loading-animation');\n\nexport default class RSVP extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            error: false,\n            success: false,\n            eventInfo: {},\n            rsvp: ''\n        }\n    }\n\n    getUrlVars() {\n        var vars = {};\n        var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n            vars[key] = value;\n        });\n        return vars;\n    }\n\n\n    componentDidMount() {\n        let id = this.getUrlVars()[\"id\"];\n        let token = this.getUrlVars()[\"token\"];\n        if (id && token) {\n            events.getEvent(id).then((r) => {\n                events.getRSVP(id, token).then((rsvp) => {\n                    this.setState({\n                        success: true,\n                        loading: false,\n                        eventInfo: r,\n                        rsvp\n                    });\n                })\n            }).catch((err) => {\n                this.setState({\n                    'error': true\n                })\n            });\n        } else {\n            this.setState({\n                'error': true\n            });\n        }\n\n        // let going_button = document.getElementById('going_button');\n        // let not_going_button = document.getElementById('not_going_button');\n\n        // going_button.onclick = function()  {\n\n        // }\n\n        // not_going_button.onclick = function() {\n\n        // }\n\n    }\n\n    render() {\n        return (\n            <Header showLogo={true}>\n                <Grid container justify={\"center\"}>\n                    <Box pt={25}>\n                        <div>\n                            {this.state.loading && !this.state.error &&\n                                <div>\n                                    <Loading\n                                        isLoading={this.state.loading}\n                                        width={80}\n                                        height={80}\n                                        strokeWidth={4}\n                                    >\n                                    </Loading>\n                                    <Box pt={5}>\n                                        <h1>Loading event details...</h1>\n                                    </Box>\n                                </div>\n                            }\n                            {\n                                this.state.error &&\n                                <div>\n                                    <h1>Couldn't fetch the details of that event</h1>\n                                    <br />\n                                    <p>That event may have been deleted, or may be a private one.</p>\n                                </div>\n                            }\n                            {\n                                this.state.success && !this.state.error &&\n                                <div>\n                                    <h1>{this.state.eventInfo.name}</h1>\n                                    <br />\n                                    <h3>\n                                        {this.state.rsvp == \"invited\" &&\n                                            \"You are currently invited for this event, will you be going for this event?\"\n                                        }\n                                        {this.state.rsvp == \"going\" &&\n                                            \"All good! You are going for this event.\"\n                                        }\n                                        {this.state.rsvp == \"not_going\" &&\n                                            \"You've responded with Not Going for this event\"\n                                        }\n                                    </h3>\n                                    <br />\n                                    <br />\n                                    <Grid container justify={\"center\"}>\n                                        <Box p={2}>\n                                            <Button variant={\"contained\"} theme={\"blue\"} id={\"going_button\"}>\n                                                Yes, I'm going!\n                                            </Button>\n                                        </Box>\n                                        <Box p={2}>\n                                            <Button variant={\"contained\"} theme={\"red\"} id={\"not_going_button\"}>\n                                                Nope, I can't go :(\n                                            </Button>\n                                        </Box>\n                                    </Grid>\n                                </div>\n                            }\n                        </div>\n                    </Box>\n                </Grid>\n            </Header>\n        )\n    }\n}"],"sourceRoot":""}